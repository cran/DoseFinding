2011-02-09 Bjoern Bornkamp (version 0.4-2)
    * calcBayesEst, getUpdDesign: Minor changes to make functions
      more suited for general purpose use.

2010-12-01 Bjoern Bornkamp (version 0.4-1)
    * Introduced new functions calcBayesEst and getUpdDesign,
      both were used for simulation purposes in the paper
      Bornkamp et al. (2011) "Response Adaptive Dose-Finding
      under Model Uncertainty" (to appear in Annals of Applied
      Statistics).
	
2010-11-12 Bjoern Bornkamp (version 0.3-1)
    * calcOptDesign now has an additional optimizer "exact". This
      methods calculates all possible designs for a given sample size
      and then selects the best.
    * Changed order in MakeVars as requested
    * calcCrit now checks whether there are not less design points
      than parameters.
    * Code now checks for positive sigma in powCalc and powerMM
	
2010-11-05 Bjoern Bornkamp (version 0.2-3)
    * MED function now checks for clinRel > 0 (thanks to Georgina).
    * Changed minor bug in output from print.MCPtest (print one-sided
      just once)
    * Code now outputs a warning, when 'models' argument is missing
      (in MCPMod and fullMod function); in fitDRModel it outputs 
      a warning if 'model' is missing
    * Introduced a default base = 0 and maxEff = 1 for the plotModels
      function.
    * Added a summary method for DRMod objects.
    * Removed superfluous addCovarVals argument from predict.DRMod
    * Removed option method = "mult" in calcOptDesign

2010-07-08 Bjoern Bornkamp (version 0.2-2)
    * calcCrit and calcOptDesign now check for NA, NaN or +-Inf
      values in the gradient and bvector (and stop execution when
      these values occur) before passing these values to the C
      code.
    * Introduced a logLik method for DRMod objects
    * Changed mvtnorm.control default argument for "interval"
      to reflect recent changes in mvtnorm package.

2010-05-27 Bjoern Bornkamp (version 0.2-1)
    * Made the getGrad function (gradient for dose-response model),
      including documentation available for end-user (was previously
      hidden in NAMESPACE)
    * Changes in the plot.MCPMod function (col argument for 
      panel.superpose was read in different order depending on
      lattice options, now there is a manual workaround with
      panel.xyplot calls for each group)


2010-05-20 Bjoern Bornkamp (version 0.1-3)
    * Smaller changes in calcCrit functions (the parameter p is
      now calculated by the nPars function as in getOptDesign)
    * Add further options to powerScenario function (now possible
      to for user-specified row and column names for output matrix)


2010-05-13 Bjoern Bornkamp (version 0.1-2)
    * Removed one example from sampSize to reduce check time.
    * modelSelect: Use first model when two models have exactly
      the same AIC or BIC value.
    * predict.DRMod: Return NA as standard deviation if code
      cannot calculate Cholesky transformation of covariance
      matrix (thanks to Setia Pramana for the hint).
    * calcCrit: Code now allows for specifying multiple designs
      in a matrix.
	
2010-04-14 Bjoern Bornkamp (version 0.1-1)
    * fitModel.nls now checks whether nls with plinear option made
      a positive number of iterations (as additional convergence check).
      In some cases (eg. when number of parameters = number of 
      doses) plinear does not do any iteration and does *not* 
      put out a warning message that the algorithm failed.
    * The calcOptDesign function now allows for upper and lower bounds
      on the allocation weights.
    * There is no longer the need to specify clinRel, when one wants
      to calculate a D-optimal design.
    * Output of bootMCPMod function in case of model averaging now
      also includes dose estimates under each model & corrected
      bug in print.bootMCPMod function (thanks to Setia Pramana)

2010-03-08 Bjoern Bornkamp (version 0.1)
    * 1st Release as version 0.1. Improvements over MCPMod package:
      - Extended and improved version of MCPMod (allowing for covariates
        and robustified self-developed optimizer)
      - Functions for MCP (MCPtest) and Modelling (fitDRModel) part
        now available to the user
      - New functions (eg. bootMCPMod, powerScenario)
      - Functions for calculating optimal designs
